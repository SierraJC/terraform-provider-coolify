# Visit https://goreleaser.com for documentation on how to customize this
# behavior.
version: 2
builds:
  - env:
      # goreleaser does not work with CGO, it could also complicate
      # usage by users in CI/CD systems like HCP Terraform where
      # they are unable to install libraries.
      - CGO_ENABLED=0
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - "-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}"
    goos:
      - freebsd
      - windows
      - linux
      - darwin
    goarch:
      - amd64
      - "386"
      - arm
      - arm64
    ignore:
      - goos: darwin
        goarch: "386"
    binary: "{{ .ProjectName }}_v{{ .Version }}"

archives:
  - formats: zip
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

checksum:
  name_template: "{{ .ProjectName }}_{{ .Version }}_SHA256SUMS"
  algorithm: sha256
  extra_files:
    - glob: "terraform-registry-manifest.json"
      name_template: "{{ .ProjectName }}_{{ .Version }}_manifest.json"

signs:
  - artifacts: checksum
    args:
      # if you are using this in a GitHub action or some other automated pipeline, you
      # need to pass the batch flag to indicate its not interactive.
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"

release:
  draft: true
  replace_existing_draft: true
  extra_files:
    - glob: "terraform-registry-manifest.json"
      name_template: "{{ .ProjectName }}_{{ .Version }}_manifest.json"
  footer: |
    **Full Changelog**: https://github.com/SierraJC/terraform-provider-coolify/compare/{{ .PreviousTag }}...{{ if .IsNightly }}nightly{{ else }}{{ .Tag }}{{ end }}

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^test:"
      - "^test\\("
      - "^ci:"
      - "^ci\\("
      - "^build:"
      - "^build\\("
      - "^chore\\(deps\\):" # dev tools only
      - "^(docs|chore)\\(git\\):" # repo maintenance nobody cares about
      - "^merge"
      - "^Merge"
      - "\\btypos?\\b" # typos are not interesting
  groups:
    - title: ‚ö†Ô∏è Breaking Changes
      regexp: "^.*\\w[(\\w)]*!:+.*$"
      order: 0
    - title: ‚ú® New Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 100
    - title: üîí Security updates
      # Match any commit that contains [SECURITY] (ie renovate bot)
      regexp: "^.*\\[(?i)SECURITY\\]$"
      order: 150
    - title: üì¶ Dependency updates
      regexp: "^.*(feat|fix)\\(deps\\)*:+.*$"
      order: 450
    - title: üêõ Bug fixes
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 200
    - title: üìù Documentation updates
      regexp: "^.*docs[(\\w)]*:+.*$"
      order: 400
    - title: üîß Build process updates
      regexp: "^.*?(build|ci)[(\\w)]*:+.*$"
      order: 500
    - title: üìë Other changes
      order: 9999
