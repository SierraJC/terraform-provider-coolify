name: Tests

on:
  pull_request:
  push:
    # Allow renovate branches to CI on push for noise-reduction on auto-merges
    paths-ignore:
      - "**/*.md"
    branches:
      - main
      - "renovate/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Build
    if: github.event_name != 'pull_request' || github.actor != 'renovate[bot]' # Skip Renovate PRs, should be handled by push event
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: "go.mod"
          cache: true
      - run: go mod download
      - run: go build -v .
      # - name: Run linters
      #   uses: golangci/golangci-lint-action@971e284b6050e8a5849b72094c50ab08da042db8 # v6.1.1
      #   with:
      #     version: latest

  generate:
    name: Generate
    if: github.event_name != 'pull_request' || github.actor != 'renovate[bot]' # Skip Renovate PRs, should be handled by push event
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: "tools/go.mod"
          cache-dependency-path: "tools/go.sum"
          cache: true
      # We need the latest version of Terraform for our documentation generation to use
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_wrapper: false
      - run: make generate
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'make generate' command and commit."; exit 1)

  unit:
    name: Unit Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: "go.mod"
          cache: true
      - run: |
          go clean -testcache
          go test -v \
            -cover -coverprofile=coverage.txt -covermode=atomic \
            ./... 2>&1 | tee test-output
          go install github.com/jstemmer/go-junit-report/v2@latest
          $(go env GOPATH)/bin/go-junit-report -in test-output -set-exit-code -iocopy	-out junit.xml

      - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        if: ${{ !cancelled() && !startsWith(github.head_ref, 'renovate/') }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unit
      - uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        if: ${{ !cancelled() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unit

  acceptance:
    if: ${{ !contains(github.event.head_commit.message, '[skip acc]') }}
    name: Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15

    concurrency:
      group: acceptance-tests
      cancel-in-progress: false

    strategy:
      fail-fast: false
      # todo: parallelism isn't working due to acceptance test resource name collision
      max-parallel: 1
      matrix:
        include:
          # - tool: terraform
          #   version: v1.5.7
          - tool: terraform
            version: v1.12.x
          # - tool: opentofu
          #   version: v1.10.x
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: "go.mod"
          cache: true
      - run: go mod download

      - if: matrix.tool == 'terraform'
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ matrix.version }}
          terraform_wrapper: false

      - if: matrix.tool == 'opentofu'
        uses: opentofu/setup-opentofu@000eeb8522f0572907c393e8151076c205fdba1b # v1.0.6
        with:
          tofu_version: ${{ matrix.version }}
          tofu_wrapper: false
      - if: matrix.tool == 'opentofu'
        run: |
          echo TF_ACC_TERRAFORM_PATH="$(which tofu)" >> $GITHUB_ENV
          echo TF_ACC_PROVIDER_NAMESPACE="hashicorp" >> $GITHUB_ENV
          echo TF_ACC_PROVIDER_HOST="registry.opentofu.org" >> $GITHUB_ENV

      - uses: tailscale/github-action@84a3f23bb4d843bcf4da6cf824ec1be473daf4de # v3
        with:
          # oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          # oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          # NOTE: Using authkey due to Tailnet Lock
          authkey: ${{ secrets.TS_AUTHKEY }}
          statedir: /tmp/tailscale-state/
          tags: tag:ci
          version: 1.78.1
      - name: Check Coolify API health
        run: curl --silent --fail --max-time 15 "${COOLIFY_ENDPOINT}/../health" | grep --quiet "^OK$"
        env:
          COOLIFY_ENDPOINT: ${{ secrets.ACC_COOLIFY_ENDPOINT }}

      - name: Run go test
        run: |
          go clean -testcache
          go test -v -timeout=10m \
            -cover -coverprofile=coverage.txt -covermode=atomic \
            -run '^(TestAcc|TestProtocol6ProviderServerConfigure)' \
            ./... 2>&1 | tee test-output
          go install github.com/jstemmer/go-junit-report/v2@latest
          $(go env GOPATH)/bin/go-junit-report -in test-output -set-exit-code -iocopy	-out junit.xml
        env:
          TF_ACC: "1"
          TF_LOG: WARN
          COOLIFY_ENDPOINT: ${{ secrets.ACC_COOLIFY_ENDPOINT }}
          COOLIFY_TOKEN: ${{ secrets.ACC_COOLIFY_TOKEN }}
        timeout-minutes: 11

      - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        if: ${{ !cancelled() && !startsWith(github.head_ref, 'renovate/') && matrix.tool == 'terraform' && matrix.version == 'v1.11.x' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: acceptance
      - uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        if: ${{ !cancelled() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: acceptance
