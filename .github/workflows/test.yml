name: Tests

on:
  pull_request:
  push:
    # Allow renovate branches to CI on push for noise-reduction on auto-merges
    paths-ignore:
      - "**/*.md"
    branches:
      - main
      - "renovate/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Build
    if: github.event_name != 'pull_request' || github.actor != 'renovate[bot]' # Skip Renovate PRs, should be handled by push event
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version-file: "go.mod"
          cache: true
      - run: go mod download
      - run: go build -v .
      # - name: Run linters
      #   uses: golangci/golangci-lint-action@971e284b6050e8a5849b72094c50ab08da042db8 # v6.1.1
      #   with:
      #     version: latest

  generate:
    name: Generate
    if: github.event_name != 'pull_request' || github.actor != 'renovate[bot]' # Skip Renovate PRs, should be handled by push event
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version-file: "tools/go.mod"
          cache-dependency-path: "tools/go.sum"
          cache: true
      # We need the latest version of Terraform for our documentation generation to use
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_wrapper: false
      - run: make generate
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'make generate' command and commit."; exit 1)

  unit:
    name: Unit Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version-file: "go.mod"
          cache: true
      - run: go install github.com/jstemmer/go-junit-report/v2@latest
      - run: |
          go test -v \
          -cover -coverprofile=coverage.txt -covermode=atomic \
          ./... 2>&1 | go-junit-report -set-exit-code > junit.xml

      - uses: codecov/codecov-action@015f24e6818733317a2da2edd6290ab26238649a # v5.0.7
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - if: ${{ !cancelled() }}
        uses: codecov/test-results-action@9739113ad922ea0a9abb4b2c0f8bf6a4aa8ef820 # v1.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  acceptance:
    name: Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: ${{ !contains(github.event.head_commit.message, '[skip acc]') }}
    strategy:
      # todo: parallelism isn't working due to acceptance test resource name collision
      max-parallel: 1
      fail-fast: false
      matrix:
        terraform:
          # - "1.5.7" # todo: Coolify AccTest server is being rate limited, causing test failures
          - "1.9.*"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version-file: "go.mod"
          cache: true
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download

      - uses: tailscale/github-action@67573e622a7b555a2f4e2078c6ad161201e3e91e # Avoiding "v2" tag due to outdated action
        with:
          # oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          # oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          # NOTE: Using authkey due to Tailnet Lock
          authkey: ${{ secrets.TS_AUTHKEY }}
          statedir: /tmp/tailscale-state/
          tags: tag:ci
          version: 1.76.1

      - run: go install github.com/jstemmer/go-junit-report/v2@latest
      - run: |
          go test -v \
          -cover -coverprofile=coverage.txt -covermode=atomic \
          -run '^(TestAcc|TestProtocol6ProviderServerConfigure)' \
          ./internal/provider/ 2>&1 | go-junit-report -set-exit-code > junit.xml
        env:
          TF_ACC: "1"
          COOLIFY_ENDPOINT: ${{ secrets.ACC_COOLIFY_ENDPOINT }}
          COOLIFY_TOKEN: ${{ secrets.ACC_COOLIFY_TOKEN }}
        timeout-minutes: 10

      - uses: codecov/codecov-action@015f24e6818733317a2da2edd6290ab26238649a # v5.0.7
        if: matrix.terraform == '1.9.*'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - uses: codecov/test-results-action@9739113ad922ea0a9abb4b2c0f8bf6a4aa8ef820 # v1.0.1
        if: ${{ !cancelled() && matrix.terraform == '1.9.*' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
